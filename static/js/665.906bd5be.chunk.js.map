{"version":3,"file":"static/js/665.906bd5be.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { fetchCreateUser } from 'redux/auth/operations';\n\nconst RegisterForm = () => {\n  const nameId = nanoid();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n  const dispatch = useDispatch();\n\n  const submitRegistration = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      fetchCreateUser({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      <FormControl>\n        <form onSubmit={submitRegistration}>\n          <FormLabel htmlFor={nameId}>User name</FormLabel>\n          <Input\n            // _placeholder={{\n            //   color: 'var(--chakra-colors-teal-500)',\n            // }}\n            placeholder=\"Enter name\"\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n          />\n          <FormLabel htmlFor={emailId}>Email</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            // _placeholder={{\n            //   color: 'var(--chakra-colors-teal-500)',\n            // }}\n            placeholder=\"Enter email\"\n            id={emailId}\n          />\n          <FormLabel htmlFor={passwordId}>Password</FormLabel>\n          <Input\n            pr=\"4.5rem\"\n            type=\"password\"\n            name=\"password\"\n            // _placeholder={{\n            //   color: 'var(--chakra-colors-teal-500)',\n            // }}\n            placeholder=\"Enter password\"\n            id={passwordId}\n          />\n          <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n            Submit\n          </Button>\n        </form>\n      </FormControl>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst Register = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["nameId","nanoid","emailId","passwordId","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","fetchCreateUser","name","elements","value","email","password","reset","htmlFor","I","placeholder","id","type","pr","mt","colorScheme","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","ownProps","jsxs","display","textAlign","useFormControl","_b","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}