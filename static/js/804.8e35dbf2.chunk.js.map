{"version":3,"file":"static/js/804.8e35dbf2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.module.css","components/Filter/Filter.jsx","components/ContactsItem/ContactsItem.module.css","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.js","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { nanoid } from 'nanoid';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const nameId = nanoid();\n  const phoneId = nanoid();\n\n  const submitContact = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      addNewContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n        id: nanoid(),\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      <FormControl>\n        <form onSubmit={submitContact}>\n          <FormLabel htmlFor={nameId}>Name</FormLabel>\n          <Input\n            _placeholder={{\n              color: 'var(--chakra-colors-teal-500)',\n            }}\n            placeholder=\"Enter name\"\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n          />\n          <FormLabel htmlFor={phoneId}>Phone</FormLabel>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            _placeholder={{\n              color: 'var(--chakra-colors-teal-500)',\n            }}\n            placeholder=\"Enter phone\"\n            id={phoneId}\n          />\n          <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n            Add contact\n          </Button>\n        </form>\n      </FormControl>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/contacts/filterSlise';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <FormLabel>\n      Find contacts by name\n      <Input\n        _placeholder={{\n          color: 'var(--chakra-colors-teal-500)',\n        }}\n        placeholder=\"Enter name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={e => dispatch(filterChange(e.target.value))}\n      />\n    </FormLabel>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch } from 'react-redux';\nimport css from './ContactsItem.module.css';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nconst ContactsItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.contactItem}>\n      <span>\n        {name}: {number}\n      </span>\n      <button\n        className={css.deleteBtn}\n        type=\"button\"\n        onClick={() => dispatch(deleteContacts(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n","import { Text } from '@chakra-ui/react';\nimport css from './ContactsList.module.css';\nimport Filter from 'components/Filter/Filter';\nimport ContactsItem from 'components/ContactsItem/ContactsItem';\nimport { useContacts } from 'hooks';\n\nconst ContactsList = () => {\n  const { contacts } = useContacts();\n\n  return (\n    <>\n      <Text\n        fontSize=\"5xl\"\n        textAlign=\"center\"\n        // ml=\"10px\"\n        // textShadow=\"1px 2px #319795\"\n        // color=\"#d6d5d0\"\n      >\n        Contacts\n      </Text>\n      <Filter />\n      {contacts.length !== 0 && (\n        <ul className={css.contactList}>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <ContactsItem name={name} number={number} key={id} id={id} />\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default ContactsList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <ContactForm />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["dispatch","useDispatch","nameId","nanoid","phoneId","onSubmit","e","preventDefault","form","target","addNewContact","name","elements","value","number","id","reset","htmlFor","I","_placeholder","color","placeholder","type","mt","colorScheme","onChange","filterChange","className","css","onClick","deleteContacts","contacts","useContacts","fontSize","textAlign","length","map","useEffect","fetchContacts","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","cx","jsx","chakra","__css","displayName","field","helperText","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","ownProps","jsxs","display","useFormControl","_b","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","Text","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textDecoration","textTransform","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}