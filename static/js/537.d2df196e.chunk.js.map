{"version":3,"file":"static/js/537.d2df196e.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm.jsx","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","../node_modules/@chakra-ui/tag/dist/chunk-IXKZFKRY.mjs","components/ContactsItem.jsx","components/Filter.jsx","components/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import {\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/operations';\nimport { Field, Form, Formik } from 'formik';\nimport { object, string } from 'yup';\n\nconst schema = object().shape({\n  name: string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Invalid name'\n    )\n    .required(),\n  number: string()\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Invalid phone number'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const submitContact = (value, { resetForm }) => {\n    dispatch(\n      addNewContact({\n        ...value,\n        id: nanoid(),\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={submitContact}\n        validationSchema={schema}\n      >\n        {props => (\n          <Form>\n            <Field name=\"name\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\n                  <FormLabel>Name</FormLabel>\n                  <FormErrorMessage>{form.touched.name}</FormErrorMessage>\n                  <Input\n                    {...field}\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    autoComplete=\"off\"\n                  />\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"number\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.number && form.touched.number}\n                >\n                  <FormLabel>Number</FormLabel>\n                  <FormErrorMessage>{form.touched.number}</FormErrorMessage>\n                  <Input\n                    {...field}\n                    type=\"tel\"\n                    placeholder=\"Enter phone\"\n                    autoComplete=\"off\"\n                  />\n                </FormControl>\n              )}\n            </Field>\n            <Button\n              mt={4}\n              colorScheme=\"teal\"\n              type=\"submit\"\n              sx={{\n                '@media screen and (max-width: 480px)': {\n                  h: 'var(--chakra-sizes-8)',\n                },\n              }}\n              disabled={!props.isValid}\n            >\n              Add contact\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","// src/tag.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nvar Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */ jsx(TagStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(chakra.span, { ref, ...ownProps, __css: containerStyles }) });\n});\nTag.displayName = \"Tag\";\nvar TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */ jsx(chakra.span, { ref, noOfLines: 1, ...props, __css: styles.label });\n});\nTagLabel.displayName = \"TagLabel\";\nvar TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginEnd: \"0.5rem\", ...props }));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nvar TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginStart: \"0.5rem\", ...props }));\nTagRightIcon.displayName = \"TagRightIcon\";\nvar TagCloseIcon = (props) => /* @__PURE__ */ jsx(Icon, { verticalAlign: \"inherit\", viewBox: \"0 0 512 512\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }\n) });\nTagCloseIcon.displayName = \"TagCloseIcon\";\nvar TagCloseButton = forwardRef(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props;\n    const styles = useTagStyles();\n    const btnStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.button,\n      {\n        ref,\n        \"aria-label\": \"close\",\n        ...rest,\n        type: \"button\",\n        disabled: isDisabled,\n        __css: btnStyles,\n        children: children || /* @__PURE__ */ jsx(TagCloseIcon, {})\n      }\n    );\n  }\n);\nTagCloseButton.displayName = \"TagCloseButton\";\n\nexport {\n  useTagStyles,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  TagRightIcon,\n  TagCloseButton\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport {\n  Avatar,\n  Button,\n  ListItem,\n  Tag,\n  TagLabel,\n  Text,\n} from '@chakra-ui/react';\n\nconst ContactsItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <ListItem\n      key={id}\n      display=\"flex\"\n      alignItems=\"center\"\n      sx={{\n        '@media screen and (max-width: 480px)': {\n          fontSize: 'var(--chakra-fontSizes-md)',\n        },\n      }}\n    >\n      <Tag size=\"lg\" colorScheme=\"green\" borderRadius=\"full\">\n        <Avatar\n          w=\"30px\"\n          h=\"30px\"\n          mr=\"10px\"\n          name={name}\n          src=\"https://bit.ly/broken-link\"\n          sx={{\n            '@media screen and (max-width: 480px)': {\n              w: '25px',\n              h: '25px',\n            },\n          }}\n        />\n        <TagLabel>{name}:</TagLabel>\n      </Tag>\n      <Text ml=\"10px\">{number}</Text>{' '}\n      <Button\n        color=\"var(--chakra-colors-teal-500)\"\n        height=\"var(--chakra-sizes-6)\"\n        ml=\"auto\"\n        type=\"button\"\n        onClick={() => dispatch(deleteContacts(id))}\n      >\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nexport default ContactsItem;\n","import { FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/contacts/filterSlise';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <FormLabel m=\"20px 0\" textAlign=\"center\" fontSize=\"20px\">\n      Find contact\n      <Input\n        placeholder=\"Enter name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={e => dispatch(filterChange(e.target.value))}\n        autoComplete=\"off\"\n        m=\"10px 0\"\n      />\n    </FormLabel>\n  );\n};\n\nexport default Filter;\n","import { List, Text } from '@chakra-ui/react';\nimport ContactsItem from 'components/ContactsItem';\nimport Filter from 'components/Filter';\nimport { useContacts } from 'hooks';\n\nconst ContactsList = () => {\n  const { contacts } = useContacts();\n\n  return (\n    <>\n      <Text fontSize=\"3xl\" textAlign=\"center\">\n        Contacts\n      </Text>\n      <Filter />\n      {contacts.length !== 0 && (\n        <List spacing={3}>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <ContactsItem name={name} number={number} key={id} id={id} />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\nexport default ContactsList;\n","import ContactForm from 'components/ContactForm';\nimport ContactsList from 'components/ContactsList';\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <ContactForm />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","schema","object","shape","name","string","matches","required","number","initialValues","dispatch","useDispatch","onSubmit","value","resetForm","addNewContact","validationSchema","props","field","form","isInvalid","errors","touched","I","type","placeholder","autoComplete","mt","colorScheme","sx","h","disabled","isValid","createContext","errorMessage","ListStylesProvider","useListStyles","List","forwardRef","ref","styles","useMultiStyleConfig","omitThemingProps","children","styleType","stylePosition","spacing","rest","validChildren","Children","filter","child","isValidElement","getValidChildren","spacingStyle","jsx","chakra","listStyleType","listStylePosition","role","__css","container","displayName","as","marginStart","ListItem","item","Icon","icon","TagStylesProvider","useTagStyles","Tag","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","TagLabel","noOfLines","label","marginEnd","TagCloseIcon","viewBox","fill","d","isDisabled","btnStyles","justifyContent","outline","closeButton","fontSize","borderRadius","w","mr","src","ml","color","height","onClick","deleteContacts","m","textAlign","onChange","e","filterChange","target","contacts","useContacts","length","map","useEffect","fetchContacts"],"sourceRoot":""}