{"version":3,"file":"static/js/428.aae85b69.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.js","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { nanoid } from 'nanoid';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const nameId = nanoid();\n  const phoneId = nanoid();\n\n  const submitContact = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      addNewContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n        id: nanoid(),\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      <FormControl>\n        <form onSubmit={submitContact}>\n          <FormLabel htmlFor={nameId}>Name</FormLabel>\n          <Input\n            // _placeholder={{\n            //   color: 'var(--chakra-colors-teal-500)',\n            // }}\n            placeholder=\"Enter name\"\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n          />\n          <FormLabel htmlFor={phoneId}>Phone</FormLabel>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            // _placeholder={{\n            //   color: 'var(--chakra-colors-teal-500)',\n            // }}\n            placeholder=\"Enter phone\"\n            id={phoneId}\n          />\n          <Button\n            mt={4}\n            color=\"var(--chakra-colors-gray-50)\"\n            background=\"var(--chakra-colors-orange-300)\"\n            type=\"submit\"\n          >\n            Add contact\n          </Button>\n        </form>\n      </FormControl>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import { FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/contacts/filterSlise';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <FormLabel>\n      Find contacts by name\n      <Input\n        // _placeholder={{\n        //   color: 'var(--chakra-colors-teal-500)',\n        // }}\n        placeholder=\"Enter name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={e => dispatch(filterChange(e.target.value))}\n      />\n    </FormLabel>\n  );\n};\n\nexport default Filter;\n","import {\n  Avatar,\n  Button,\n\n  List,\n\n  ListItem,\n  Text,\n} from '@chakra-ui/react';\n\nimport Filter from 'components/Filter/Filter';\n// import ContactsItem from 'components/ContactsItem/ContactsItem';\nimport { useContacts } from 'hooks';\nimport { useDispatch,  } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\n\n\nconst ContactsList = () => {\n  const { contacts } = useContacts();\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Text\n        fontSize=\"3xl\"\n        textAlign=\"center\"\n        // ml=\"10px\"\n        // textShadow=\"1px 2px #319795\"\n        // color=\"#d6d5d0\"\n      >\n        Contacts\n      </Text>\n      <Filter />\n      {contacts.length !== 0 && (\n        <List spacing={3}>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <ListItem\n                key={id}\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\" space-between\"\n              >\n                <Avatar\n                  w=\"30px\"\n                  h=\"30px\"\n                  name={name}\n                  src=\"https://bit.ly/broken-link\"\n                />\n\n                <Text\n                  fontSize=\"xl\"\n                  // textAlign=\"center\"\n                  // ml=\"10px\"\n                  // textShadow=\"1px 2px #319795\"\n                  // color=\"#d6d5d0\"\n                >\n                  {name}: {number}\n                </Text>\n                <Button\n                  // mt={4}\n                  color=\"var(--chakra-colors-orange-600)\"\n                  height=\"var(--chakra-sizes-6)\"\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContacts(id))}\n                >\n                  Delete\n                </Button>\n              </ListItem>\n              // </Flex>\n              // <ContactsItem name={name} number={number} key={id} id={id} />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\nexport default ContactsList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <ContactForm />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["dispatch","useDispatch","nameId","nanoid","phoneId","onSubmit","e","preventDefault","form","target","addNewContact","name","elements","value","number","id","reset","htmlFor","I","placeholder","type","mt","color","background","createContext","errorMessage","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","children","styleType","stylePosition","spacing","rest","validChildren","Children","filter","child","isValidElement","getValidChildren","spacingStyle","jsx","chakra","listStyleType","listStylePosition","role","__css","container","displayName","as","marginStart","ListItem","item","Icon","icon","onChange","filterChange","contacts","useContacts","fontSize","textAlign","length","map","display","alignItems","justifyContent","w","h","src","height","onClick","deleteContacts","useEffect","fetchContacts","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","getErrorMessageProps","getRootProps","getRequiredIndicatorProps","onFocus","onBlur","useFormControlProvider","context","className","cx","field","helperText","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","ownProps","jsxs","useFormControl","_b","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","Text","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textDecoration","textTransform","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}